question::
https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/
solution:
https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/discuss/1535892/C%2B%2B-0ms-and-memory-less-92.5-or-One-Line-Simple-and-Optimal-
solution-using-Binary-Search


Divide and Conquer approach (RunTime : 58 ms & Memory Usage : 92.75%)

	int solve(vector<int>&nums,int l,int r){
		if(l==r-1||l==r)
			return min(nums[l],nums[r]);

		int mid = l+(r-l)/2; // finding middle
		
		return min(solve(nums,l,mid),solve(nums,mid,r)); //return min element in both side;
	}
    int findMin(vector<int>& nums) {
        return solve(nums,0,nums.size()-1);   
    }


binary search

  int findMin(vector<int>& nums) {
          int r = nums.size()-1, l = 0, mid;
        while (l <= r) {
            mid = l + (r - l) / 2;
            if (nums[mid] > nums[r]) l = mid + 1;
            else if (nums[mid] < nums[r]) r = mid;
            else r--;
        }
        return nums[l];
    }