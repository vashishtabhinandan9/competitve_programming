1.
problem: Range Sum of Sorted Subarray Sums
https://leetcode.com/problems/range-sum-of-sorted-subarray-sums/
solution:
(must read)
https://leetcode.com/problems/range-sum-of-sorted-subarray-sums/discuss/2464381/C%2B%2B-binary-search-constant-space-oror-Comments-oror-Thought-process


2.
problem:https://leetcode.com/problems/check-if-all-the-integers-in-a-range-are-covered/

solution:
 bool isCovered(vector<vector<int>>& ranges, int left, int right) {
        int mp[52]={};
        for(auto r: ranges){
            mp[r[0]]+=1;
            mp[r[1]+1]-=1;
            
        }
        
        for(int i=1;i<52;i++){
            mp[i]+=mp[i-1];
            
        }
        
        for(int i=left;i<=right;i++){
            if(mp[i]==0) return false;
        }
          return true;
        
        /*
          for (int i = 1, overlaps = 0; i <= right; ++i) {
        overlaps += line[i];
        if (i >= left && overlaps == 0)
            return false;
    }
        */
        